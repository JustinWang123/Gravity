#ifndef PACKET_PROTOCOL_H
#define PACKET_PROTOCOL_H
#include "SDLWrapper.h"
#include "PlayerCharacter.h"
#include "Map.h"

/* Defines for the chat client */
const Uint32 PACKET_PACKETSIZE = 3000;		/* Maximum length of a message */

/* Defines shared between the server and client */
const Uint32 NETWORK_PORT = 3000;

const Uint32 PACKET_SEQUENCE_NUM = 1;

/* The protocol between the chat client and server */
const Uint32 PACKET_REQUEST_CONNECTION = 0;
const Uint32 PACKET_REQUEST_CONNECTION_SEQUENCE_NUM = 1;
const Uint32 PACKET_REQUEST_CONNECTION_NLEN = 5;
const Uint32 PACKET_REQUEST_CONNECTION_NAME = 9;
const Uint32 PACKET_REQUEST_CONNECTION_LENGTH = 13;

const Uint32 PACKET_ADD = 1;
const Uint32 PACKET_ADD_SEQUENCE_NUM = 1;
const Uint32 PACKET_ADD_SLOT = 5;
const Uint32 PACKET_ADD_HOST = 9;
const Uint32 PACKET_ADD_PORT = 13;
const Uint32 PACKET_ADD_NLEN = 17;
const Uint32 PACKET_ADD_NAME = 21;
const Uint32 PACKET_ADD_LENGTH = 21; // + name length

const Uint32 PACKET_ACCEPT_CONNECTION = 6;
const Uint32 PACKET_ACCEPT_CONNECTION_SEQUENCE_NUM = 1;
const Uint32 PACKET_ACCEPT_CONNECTION_CHANNEL = 5;
const Uint32 PACKET_ACCEPT_CONNECTION_LENGTH = 9;

const Uint32 PACKET_DEL = 2;
const Uint32 PACKET_DEL_SEQUENCE_NUM = 1;
const Uint32 PACKET_DEL_SLOT = 5;
const Uint32 PACKET_DEL_LENGTH = 9;

const Uint32 PACKET_MSG = 3;
const Uint32 PACKET_MSG_SEQUENCE_NUM = 1;
const Uint32 PACKET_MSG_PLAYER_ID = 5;
const Uint32 PACKET_MSG_NLEN = 9;
const Uint32 PACKET_MSG_TEXT = 13;
const Uint32 PACKET_MSG_LENGTH = 13; // + msg length


// ------------------------------------------------------------------------------------------------
// Update World Packet:
// ------------------------------------------------------------------------------------------------
const Uint32 PACKET_UPDATE_WORLD = 30;
const Uint32 PACKET_UPDATE_WORLD_SEQUENCE_NUM = 1;
const Uint32 PACKET_UPDATE_WORLD_ACK = 5;
const Uint32 PACKET_UPDATE_WORLD_ACK_BITFIELD = 9;
const Uint32 PACKET_UPDATE_WORLD_TIME_STAMP = 13;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_PLAYERS = 17;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_BULLETS = 21;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_MISSILES = 25;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_MINES = 29;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_EXPLOSION_PARTICLES = 33;
const Uint32 PACKET_UPDATE_WORLD_NUM_OF_PICK_UPS = 37;
const Uint32 PACKET_UPDATE_WORLD_SUM = 41;
const Uint32 PACKET_UPDATE_WORLD_DATA_START = 45;

const Uint32 PACKET_WRITE_PLAYER_ID = 0;
const Uint32 PACKET_WRITE_PLAYER_POSX = 4;
const Uint32 PACKET_WRITE_PLAYER_POSY = 8;
const Uint32 PACKET_WRITE_PLAYER_VELX = 12;
const Uint32 PACKET_WRITE_PLAYER_VELY = 16;
const Uint32 PACKET_WRITE_PLAYER_HEALTH = 24;
const Uint32 PACKET_WRITE_PLAYER_NUM_BULLETS = 28;
const Uint32 PACKET_WRITE_PLAYER_NUM_MISSILE = 32;
const Uint32 PACKET_WRITE_PLAYER_NUM_MINES = 36;
const Uint32 PACKET_WRITE_PLAYER_SCORE = 40;
const Uint32 PACKET_WRITE_PLAYER_TIME = 44;
const Uint32 PACKET_WRITE_PLAYER_CONTROL_STATE = 48;
const Uint32 PACKET_WRITE_PLAYER_LENGTH = 48 + sizeof(ControlState); // FIXTHIS

const Uint32 PACKET_WRITE_BULLET_ID = 0;
const Uint32 PACKET_WRITE_BULLET_POSX = 4;
const Uint32 PACKET_WRITE_BULLET_POSY = 8;
const Uint32 PACKET_WRITE_BULLET_HEADING = 12;
const Uint32 PACKET_WRITE_BULLET_PLAYER_ID = 16;
const Uint32 PACKET_WRITE_BULLET_LENGTH = 20;

const Uint32 PACKET_WRITE_MISSILE_ID = 0;
const Uint32 PACKET_WRITE_MISSILE_POSX = 4;
const Uint32 PACKET_WRITE_MISSILE_POSY = 8;
const Uint32 PACKET_WRITE_MISSILE_HEADING = 12;
const Uint32 PACKET_WRITE_MISSILE_LIFE = 16;
const Uint32 PACKET_WRITE_MISSILE_HEALTH = 20;
const Uint32 PACKET_WRITE_MISSILE_PLAYER_ID = 24;
const Uint32 PACKET_WRITE_MISSILE_LENGTH = 28;

const Uint32 PACKET_WRITE_MINE_ID = 0;
const Uint32 PACKET_WRITE_MINE_POSX = 4;
const Uint32 PACKET_WRITE_MINE_POSY = 8;
const Uint32 PACKET_WRITE_MINE_HEADING = 12;
const Uint32 PACKET_WRITE_MINE_LIFE = 16;
const Uint32 PACKET_WRITE_MINE_HEALTH = 20;
const Uint32 PACKET_WRITE_MINE_PLAYER_ID = 24;
const Uint32 PACKET_WRITE_MINE_LENGTH = 28;

const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_ID = 0;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_POSX = 4;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_POSY = 8;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_HEADING = 12;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_PLAYER_ID = 16;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_LIFE = 20;
const Uint32 PACKET_WRITE_EXPLOSION_PARTICLE_LENGTH = 24;

const Uint32 PACKET_WRITE_PICK_UP_ID = 0;
const Uint32 PACKET_WRITE_PICK_UP_IS_SPAWNED = 4;
const Uint32 PACKET_WRITE_PICK_UP_RESPAWN_TIME = 5;
const Uint32 PACKET_WRITE_PICK_UP_POSX = 9;
const Uint32 PACKET_WRITE_PICK_UP_POSY = 13;
const Uint32 PACKET_WRITE_PICK_UP_TYPE = 17;
const Uint32 PACKET_WRITE_PICK_UP_LENGTH = 21;
// ------------------------------------------------------------------------------------------------

const Uint32 PACKET_PLAYER_UPDATE_SERVER = 8;
const Uint32 PACKET_PLAYER_UPDATE_SERVER_SEQUENCE_NUM = 1;
const Uint32 PACKET_PLAYER_UPDATE_SERVER_ACK_NUM = 5;
const Uint32 PACKET_PLAYER_UPDATE_SERVER_ACK_BITFIELD = 9;
const Uint32 PACKET_PLAYER_UPDATE_SERVER_LENGTH = 13;

const Uint32 PACKET_PLAYER_CONTROL_STATE = 5;
const Uint32 PACKET_PLAYER_CONTROL_STATE_SEQUENCE_NUM = 1;
const Uint32 PACKET_PLAYER_CONTROL_STATE_STATE = 5;
const Uint32 PACKET_PLAYER_CONTROL_STATE_LENGTH = 5 + sizeof(ControlState); // FIXTHIS;

const Uint32 PACKET_SPAWN = 16;
const Uint32 PACKET_SPAWN_SEQUENCE_NUM = 1;
const Uint32 PACKET_SPAWN_CHANNEL = 5;
const Uint32 PACKET_SPAWN_POS_X = 9;
const Uint32 PACKET_SPAWN_POS_Y = 13;
const Uint32 PACKET_SPAWN_LENGTH = 17;

const Uint32 PACKET_DISCONNECT = 18;
const Uint32 PACKET_DISCONNECT_SEQUENCE_NUM = 1;
const Uint32 PACKET_DISCONNECT_LENGTH = 5;

const Uint32 PACKET_KILL_NOTIFICATION = 19;
const Uint32 PACKET_KILL_NOTIFICATION_SEQUENCE_NUM = 1;
const Uint32 PACKET_KILL_NOTIFICATION_KILLER_ID = 5;
const Uint32 PACKET_KILL_NOTIFICATION_KILLED_ID = 9;
const Uint32 PACKET_KILL_NOTIFICATION_LENGTH = 13;

const Uint32 PACKET_LEVEL_DATA = 20;
const Uint32 PACKET_LEVEL_DATA_SEQUENCE_NUM = 1;
const Uint32 PACKET_LEVEL_DATA_CONTENTS = 5;
const Uint32 PACKET_LEVEL_DATA_LENGTH = 5 + MAP_NUM_TILES_X * MAP_NUM_TILES_Y;

//const Uint32 PACKET_BYE = 255;
//const Uint32 PACKET_BYE_LEN = 1;

const Uint32 PACKET_SEND_DELAY = 50;



#endif
